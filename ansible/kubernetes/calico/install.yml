---
- hosts: "control_plane,worker_nodes"
  remote_user: debian
  become: yes
  gather_facts: yes

  tasks:
    - name: Install packages for using apt over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Create containerd module configuration file
      file:
        path: "/etc/modules-load.d/containerd.conf"
        state: "touch"

    - name: Add configuration to enable modules for containerd
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
            br_netfilter
            overlay

    - name: Enable modules for containerd
      shell: |
        modprobe br_netfilter
        modprobe overlay

    - name: Create Kubernetes networking configuration file
      file:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        state: "touch"

    - name: Add Kubernetes networking configurations
      blockinfile:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        block: |
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1

    - name: Reload system configuration
      command: sysctl --system

    - name: Install containerd
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - containerd

    - name: Create containerd config
      shell: |
        mkdir -p /etc/containerd
        containerd config default > /etc/containerd/config.toml
        sed -i "s/SystemdCgroup = false/SystemdCgroup = true/g" /etc/containerd/config.toml
        sed -i 's/sandbox_image = "registry.k8s.io\/pause:[0-9]*\.[0-9]*"/sandbox_image = "registry.k8s.io\/pause:3.10"/g' /etc/containerd/config.toml
    
    - name: Restart containerd
      service:
        name: containerd
        state: restarted

    - name: Disable swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/# \1/g' /etc/fstab
      when: ansible_swaptotal_mb >= 0

    - name: Adding Kubernetes repository
      deb822_repository:
        name: kubernetes
        types: [deb]
        uris: "https://pkgs.k8s.io/core:/stable:/v1.31/deb/"
        signed_by: "https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key"
        suites: [/]
        state: present
        enabled: yes

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl

    - name: Hold Kubernetes binary version to prevent updates
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    # - name: Add user to Docker group
    #   user:
    #     name: "{{ remote-user }}"
    #     group: docker

    # - name: Reboot to apply the swap disable
    #   reboot:
    #     reboot_timeout: 180 # Three minutes
