---
- hosts: all
  become: true
  remote_user: root
  tasks:
  - name: Install packages for using apt over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Adding Docker repository
    deb822_repository:
      name: docker
      types: [deb]
      architectures: [amd64]
      uris: "https://download.docker.com/linux/{{ ansible_distribution | lower }}"
      signed_by: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
      suites: ["{{ ansible_distribution_release | lower }}"]
      components: [stable]
      state: present
      enabled: yes

  - name: Install Docker and its dependencies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

  - name: Verify Docker installation, enabled, and started
    service:
      name: docker
      state: started
      enabled: yes

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb >= 0

  - name: Adding Kubernetes repository
    deb822_repository:
      name: kubernetes
      types: [deb]
      uris: "https://pkgs.k8s.io/core:/stable:/v1.31/deb/"
      signed_by: "https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key"
      suites: [/]
      state: present
      enabled: yes

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Hold Kubernetes binary version to prevent updates
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    loop:
      - kubelet
      - kubeadm
      - kubectl

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  # - name: Add user to Docker group
  #   user:
  #     name: "{{ remote-user }}"
  #     group: docker

  - name: Reboot to apply the swap disable
    reboot:
      reboot_timeout: 180 # Three minutes

